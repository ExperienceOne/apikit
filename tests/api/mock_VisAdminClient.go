// Code generated by mockery v2.9.0. DO NOT EDIT.

package api

import mock "github.com/stretchr/testify/mock"

// MockVisAdminClient is an autogenerated mock type for the VisAdminClient type
type MockVisAdminClient struct {
	mock.Mock
}

// ActivateViewsSet provides a mock function with given fields: request
func (_m *MockVisAdminClient) ActivateViewsSet(request *ActivateViewsSetRequest) (ActivateViewsSetResponse, error) {
	ret := _m.Called(request)

	var r0 ActivateViewsSetResponse
	if rf, ok := ret.Get(0).(func(*ActivateViewsSetRequest) ActivateViewsSetResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ActivateViewsSetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ActivateViewsSetRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Code provides a mock function with given fields: request
func (_m *MockVisAdminClient) Code(request *CodeRequest) (CodeResponse, error) {
	ret := _m.Called(request)

	var r0 CodeResponse
	if rf, ok := ret.Get(0).(func(*CodeRequest) CodeResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CodeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*CodeRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCustomerSession provides a mock function with given fields: request
func (_m *MockVisAdminClient) CreateCustomerSession(request *CreateCustomerSessionRequest) (CreateCustomerSessionResponse, error) {
	ret := _m.Called(request)

	var r0 CreateCustomerSessionResponse
	if rf, ok := ret.Get(0).(func(*CreateCustomerSessionRequest) CreateCustomerSessionResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CreateCustomerSessionResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*CreateCustomerSessionRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOrUpdateClient provides a mock function with given fields: request
func (_m *MockVisAdminClient) CreateOrUpdateClient(request *CreateOrUpdateClientRequest) (CreateOrUpdateClientResponse, error) {
	ret := _m.Called(request)

	var r0 CreateOrUpdateClientResponse
	if rf, ok := ret.Get(0).(func(*CreateOrUpdateClientRequest) CreateOrUpdateClientResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CreateOrUpdateClientResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*CreateOrUpdateClientRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOrUpdateUser provides a mock function with given fields: request
func (_m *MockVisAdminClient) CreateOrUpdateUser(request *CreateOrUpdateUserRequest) (CreateOrUpdateUserResponse, error) {
	ret := _m.Called(request)

	var r0 CreateOrUpdateUserResponse
	if rf, ok := ret.Get(0).(func(*CreateOrUpdateUserRequest) CreateOrUpdateUserResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CreateOrUpdateUserResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*CreateOrUpdateUserRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOrUpdateViewsSet provides a mock function with given fields: request
func (_m *MockVisAdminClient) CreateOrUpdateViewsSet(request *CreateOrUpdateViewsSetRequest) (CreateOrUpdateViewsSetResponse, error) {
	ret := _m.Called(request)

	var r0 CreateOrUpdateViewsSetResponse
	if rf, ok := ret.Get(0).(func(*CreateOrUpdateViewsSetRequest) CreateOrUpdateViewsSetResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CreateOrUpdateViewsSetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*CreateOrUpdateViewsSetRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSession provides a mock function with given fields: request
func (_m *MockVisAdminClient) CreateSession(request *CreateSessionRequest) (CreateSessionResponse, error) {
	ret := _m.Called(request)

	var r0 CreateSessionResponse
	if rf, ok := ret.Get(0).(func(*CreateSessionRequest) CreateSessionResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CreateSessionResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*CreateSessionRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteClient provides a mock function with given fields: request
func (_m *MockVisAdminClient) DeleteClient(request *DeleteClientRequest) (DeleteClientResponse, error) {
	ret := _m.Called(request)

	var r0 DeleteClientResponse
	if rf, ok := ret.Get(0).(func(*DeleteClientRequest) DeleteClientResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeleteClientResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DeleteClientRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCustomerSession provides a mock function with given fields: request
func (_m *MockVisAdminClient) DeleteCustomerSession(request *DeleteCustomerSessionRequest) (DeleteCustomerSessionResponse, error) {
	ret := _m.Called(request)

	var r0 DeleteCustomerSessionResponse
	if rf, ok := ret.Get(0).(func(*DeleteCustomerSessionRequest) DeleteCustomerSessionResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeleteCustomerSessionResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DeleteCustomerSessionRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteUser provides a mock function with given fields: request
func (_m *MockVisAdminClient) DeleteUser(request *DeleteUserRequest) (DeleteUserResponse, error) {
	ret := _m.Called(request)

	var r0 DeleteUserResponse
	if rf, ok := ret.Get(0).(func(*DeleteUserRequest) DeleteUserResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeleteUserResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DeleteUserRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteViewsSet provides a mock function with given fields: request
func (_m *MockVisAdminClient) DeleteViewsSet(request *DeleteViewsSetRequest) (DeleteViewsSetResponse, error) {
	ret := _m.Called(request)

	var r0 DeleteViewsSetResponse
	if rf, ok := ret.Get(0).(func(*DeleteViewsSetRequest) DeleteViewsSetResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeleteViewsSetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DeleteViewsSetRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DestroySession provides a mock function with given fields: request
func (_m *MockVisAdminClient) DestroySession(request *DestroySessionRequest) (DestroySessionResponse, error) {
	ret := _m.Called(request)

	var r0 DestroySessionResponse
	if rf, ok := ret.Get(0).(func(*DestroySessionRequest) DestroySessionResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DestroySessionResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DestroySessionRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DownloadFile provides a mock function with given fields: request
func (_m *MockVisAdminClient) DownloadFile(request *DownloadFileRequest) (DownloadFileResponse, error) {
	ret := _m.Called(request)

	var r0 DownloadFileResponse
	if rf, ok := ret.Get(0).(func(*DownloadFileRequest) DownloadFileResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DownloadFileResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DownloadFileRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DownloadImage provides a mock function with given fields: request
func (_m *MockVisAdminClient) DownloadImage(request *DownloadImageRequest) (DownloadImageResponse, error) {
	ret := _m.Called(request)

	var r0 DownloadImageResponse
	if rf, ok := ret.Get(0).(func(*DownloadImageRequest) DownloadImageResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DownloadImageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DownloadImageRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DownloadNestedFile provides a mock function with given fields: request
func (_m *MockVisAdminClient) DownloadNestedFile(request *DownloadNestedFileRequest) (DownloadNestedFileResponse, error) {
	ret := _m.Called(request)

	var r0 DownloadNestedFileResponse
	if rf, ok := ret.Get(0).(func(*DownloadNestedFileRequest) DownloadNestedFileResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DownloadNestedFileResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DownloadNestedFileRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FileUpload provides a mock function with given fields: request
func (_m *MockVisAdminClient) FileUpload(request *FileUploadRequest) (FileUploadResponse, error) {
	ret := _m.Called(request)

	var r0 FileUploadResponse
	if rf, ok := ret.Get(0).(func(*FileUploadRequest) FileUploadResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(FileUploadResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*FileUploadRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindByTags provides a mock function with given fields: request
func (_m *MockVisAdminClient) FindByTags(request *FindByTagsRequest) (FindByTagsResponse, error) {
	ret := _m.Called(request)

	var r0 FindByTagsResponse
	if rf, ok := ret.Get(0).(func(*FindByTagsRequest) FindByTagsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(FindByTagsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*FindByTagsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenericFileDownload provides a mock function with given fields: request
func (_m *MockVisAdminClient) GenericFileDownload(request *GenericFileDownloadRequest) (GenericFileDownloadResponse, error) {
	ret := _m.Called(request)

	var r0 GenericFileDownloadResponse
	if rf, ok := ret.Get(0).(func(*GenericFileDownloadRequest) GenericFileDownloadResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GenericFileDownloadResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GenericFileDownloadRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBooking provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetBooking(request *GetBookingRequest) (GetBookingResponse, error) {
	ret := _m.Called(request)

	var r0 GetBookingResponse
	if rf, ok := ret.Get(0).(func(*GetBookingRequest) GetBookingResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetBookingResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetBookingRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBookings provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetBookings(request *GetBookingsRequest) (GetBookingsResponse, error) {
	ret := _m.Called(request)

	var r0 GetBookingsResponse
	if rf, ok := ret.Get(0).(func(*GetBookingsRequest) GetBookingsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetBookingsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetBookingsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetClasses provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetClasses(request *GetClassesRequest) (GetClassesResponse, error) {
	ret := _m.Called(request)

	var r0 GetClassesResponse
	if rf, ok := ret.Get(0).(func(*GetClassesRequest) GetClassesResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetClassesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetClassesRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetClient provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetClient(request *GetClientRequest) (GetClientResponse, error) {
	ret := _m.Called(request)

	var r0 GetClientResponse
	if rf, ok := ret.Get(0).(func(*GetClientRequest) GetClientResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetClientResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetClientRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetClients provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetClients(request *GetClientsRequest) (GetClientsResponse, error) {
	ret := _m.Called(request)

	var r0 GetClientsResponse
	if rf, ok := ret.Get(0).(func(*GetClientsRequest) GetClientsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetClientsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetClientsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPermissions provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetPermissions(request *GetPermissionsRequest) (GetPermissionsResponse, error) {
	ret := _m.Called(request)

	var r0 GetPermissionsResponse
	if rf, ok := ret.Get(0).(func(*GetPermissionsRequest) GetPermissionsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetPermissionsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetPermissionsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRental provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetRental(request *GetRentalRequest) (GetRentalResponse, error) {
	ret := _m.Called(request)

	var r0 GetRentalResponse
	if rf, ok := ret.Get(0).(func(*GetRentalRequest) GetRentalResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetRentalResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetRentalRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetShoes provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetShoes(request *GetShoesRequest) (GetShoesResponse, error) {
	ret := _m.Called(request)

	var r0 GetShoesResponse
	if rf, ok := ret.Get(0).(func(*GetShoesRequest) GetShoesResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetShoesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetShoesRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUser provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetUser(request *GetUserRequest) (GetUserResponse, error) {
	ret := _m.Called(request)

	var r0 GetUserResponse
	if rf, ok := ret.Get(0).(func(*GetUserRequest) GetUserResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetUserResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetUserRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserInfo provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetUserInfo(request *GetUserInfoRequest) (GetUserInfoResponse, error) {
	ret := _m.Called(request)

	var r0 GetUserInfoResponse
	if rf, ok := ret.Get(0).(func(*GetUserInfoRequest) GetUserInfoResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetUserInfoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetUserInfoRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUsers provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetUsers(request *GetUsersRequest) (GetUsersResponse, error) {
	ret := _m.Called(request)

	var r0 GetUsersResponse
	if rf, ok := ret.Get(0).(func(*GetUsersRequest) GetUsersResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetUsersResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetUsersRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetViewsSet provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetViewsSet(request *GetViewsSetRequest) (GetViewsSetResponse, error) {
	ret := _m.Called(request)

	var r0 GetViewsSetResponse
	if rf, ok := ret.Get(0).(func(*GetViewsSetRequest) GetViewsSetResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetViewsSetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetViewsSetRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetViewsSets provides a mock function with given fields: request
func (_m *MockVisAdminClient) GetViewsSets(request *GetViewsSetsRequest) (GetViewsSetsResponse, error) {
	ret := _m.Called(request)

	var r0 GetViewsSetsResponse
	if rf, ok := ret.Get(0).(func(*GetViewsSetsRequest) GetViewsSetsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetViewsSetsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetViewsSetsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListElements provides a mock function with given fields: request
func (_m *MockVisAdminClient) ListElements(request *ListElementsRequest) (ListElementsResponse, error) {
	ret := _m.Called(request)

	var r0 ListElementsResponse
	if rf, ok := ret.Get(0).(func(*ListElementsRequest) ListElementsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ListElementsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ListElementsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListModels provides a mock function with given fields: request
func (_m *MockVisAdminClient) ListModels(request *ListModelsRequest) (ListModelsResponse, error) {
	ret := _m.Called(request)

	var r0 ListModelsResponse
	if rf, ok := ret.Get(0).(func(*ListModelsRequest) ListModelsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ListModelsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ListModelsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostUpload provides a mock function with given fields: request
func (_m *MockVisAdminClient) PostUpload(request *PostUploadRequest) (PostUploadResponse, error) {
	ret := _m.Called(request)

	var r0 PostUploadResponse
	if rf, ok := ret.Get(0).(func(*PostUploadRequest) PostUploadResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(PostUploadResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*PostUploadRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ShowVehicleInView provides a mock function with given fields: request
func (_m *MockVisAdminClient) ShowVehicleInView(request *ShowVehicleInViewRequest) (ShowVehicleInViewResponse, error) {
	ret := _m.Called(request)

	var r0 ShowVehicleInViewResponse
	if rf, ok := ret.Get(0).(func(*ShowVehicleInViewRequest) ShowVehicleInViewResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ShowVehicleInViewResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ShowVehicleInViewRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
