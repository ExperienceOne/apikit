// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package todo

import mock "github.com/stretchr/testify/mock"

// MockTodoServiceClient is an autogenerated mock type for the TodoServiceClient type
type MockTodoServiceClient struct {
	mock.Mock
}

// DeleteTodo provides a mock function with given fields: request
func (_m *MockTodoServiceClient) DeleteTodo(request *DeleteTodoRequest) (DeleteTodoResponse, error) {
	ret := _m.Called(request)

	var r0 DeleteTodoResponse
	if rf, ok := ret.Get(0).(func(*DeleteTodoRequest) DeleteTodoResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeleteTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DeleteTodoRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTodos provides a mock function with given fields: request
func (_m *MockTodoServiceClient) DeleteTodos(request *DeleteTodosRequest) (DeleteTodosResponse, error) {
	ret := _m.Called(request)

	var r0 DeleteTodosResponse
	if rf, ok := ret.Get(0).(func(*DeleteTodosRequest) DeleteTodosResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeleteTodosResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DeleteTodosRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTodo provides a mock function with given fields: request
func (_m *MockTodoServiceClient) GetTodo(request *GetTodoRequest) (GetTodoResponse, error) {
	ret := _m.Called(request)

	var r0 GetTodoResponse
	if rf, ok := ret.Get(0).(func(*GetTodoRequest) GetTodoResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(GetTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*GetTodoRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTodos provides a mock function with given fields: request
func (_m *MockTodoServiceClient) ListTodos(request *ListTodosRequest) (ListTodosResponse, error) {
	ret := _m.Called(request)

	var r0 ListTodosResponse
	if rf, ok := ret.Get(0).(func(*ListTodosRequest) ListTodosResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ListTodosResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ListTodosRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PatchTodo provides a mock function with given fields: request
func (_m *MockTodoServiceClient) PatchTodo(request *PatchTodoRequest) (PatchTodoResponse, error) {
	ret := _m.Called(request)

	var r0 PatchTodoResponse
	if rf, ok := ret.Get(0).(func(*PatchTodoRequest) PatchTodoResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(PatchTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*PatchTodoRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostTodo provides a mock function with given fields: request
func (_m *MockTodoServiceClient) PostTodo(request *PostTodoRequest) (PostTodoResponse, error) {
	ret := _m.Called(request)

	var r0 PostTodoResponse
	if rf, ok := ret.Get(0).(func(*PostTodoRequest) PostTodoResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(PostTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*PostTodoRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
